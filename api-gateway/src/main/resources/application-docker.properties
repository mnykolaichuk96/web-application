# Set the name of the Spring Boot application
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka

# Configure server settings
server.port=8081

#GATEWAY CONFIGURATIONS
## Product Service Route
#    Just a free choice name
spring.cloud.gateway.routes[0].id=inventory-service
#   Can use http://localhost:port but we have random port
#   and want to use load balancer lb://product-service (lb for using eureka load balances)
spring.cloud.gateway.routes[0].uri=lb://inventory-service
#   We can set multiple paths to identify a correct routing destination.
#   Redirection from localhost:port/api/product to localhost:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/inventory/**
#spring.cloud.gateway.routes[0].predicates[1]=Path=/api/user/**
spring.cloud.gateway.routes[0].filters[0]=HeadersFilter
#   Here, you can modify requests and responses before or after sending the downstream request
#   We remove prefix here for redirection to localhost:8083 instead of localhost:8083/user
# spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/admin/order/**
spring.cloud.gateway.routes[1].filters[0]=JwtHeadersFilter

spring.cloud.gateway.routes[2].id=order-service
spring.cloud.gateway.routes[2].uri=lb://order-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/order/**
spring.cloud.gateway.routes[2].filters[0]=HeadersFilter

# Keycloak configuration

# Configure JWT authentication properties
jwt.auth.converter.resource-id = web-application-client
jwt.auth.converter.principal-attribute = preferred_username


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/auth/realms/web-application-realm

app.config.keycloak.url=http://keycloak:8080/auth
app.config.keycloak.realm=web-application-realm

spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8080/auth/realms/web-application-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.provider.keycloak.user-info-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${app.config.keycloak.url}/realms/${app.config.keycloak.realm}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=header

spring.security.oauth2.client.registration.web-application-client.provider=keycloak
spring.security.oauth2.client.registration.web-application-client.client-id=web-application-client
spring.security.oauth2.client.registration.web-application-client.client-secret=Dk5n5rLFnSX3PHcaLASqYHnRKbHkxdHR
spring.security.oauth2.client.registration.web-application-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.web-application-client.redirect-uri=http://localhost/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.web-application-client.scope=openid
