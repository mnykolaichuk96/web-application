---
version: '3'
services:
  order-service-db:
    container_name: order-service-db
    image: mysql:8.0.32
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: order-service
      MYSQL_USER: web-application
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql-order:/var/lib/mysql
    command:
      - --datadir=/var/lib/mysql
    restart: unless-stopped


  inventory-service-db:
    container_name: inventory-service-db
    image: mysql:8.0.32
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: inventory-service
      MYSQL_USER: web-application
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql-inventory:/var/lib/mysql
    command:
      - --datadir=/var/lib/mysql
    restart: unless-stopped


  keycloak-db:
    container_name: keycloak-db
    image: mysql:8.0.32
    ports:
      - 3309:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql-keycloak:/var/lib/mysql
    command:
      - --datadir=/var/lib/mysql
    restart: unless-stopped


  keycloak:
    container_name: keycloak
    image: jboss/keycloak
#    image: quay.io/keycloak/keycloak:21.1.1
#    command: [ "start-dev", "--import-realm"]
#    command:
#      - "-b 0.0.0.0 -Dkeycloak.import=/opt/jboss/keycloak/imports/realm-export.json"

    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-db
      DB_PORT: 3306
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - 8080:8080
#    Copy from local realms/realm-export.json inside container
    volumes:
#      - ./realms/:/opt/keycloak/data/import/
      - ./realms/:/opt/jboss/keycloak/imports   #this work fine
    depends_on:
      - keycloak-db


  discovery-server:
    container_name: discovery-server
    image: mnykolaichuk/discovery-server:latest
#    This env activate application-docker.properties instead of application.properties
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - 8761:8761

  api-gateway:
    container_name: api-gateway
    image: mnykolaichuk/api-gateway:latest
#    This env activate application-docker.properties instead of application.properties
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - 8081:8081
    depends_on:
      - discovery-server
      - keycloak

  order-service:
    container_name: order-service
    image: mnykolaichuk/order-service:latest
#    This env activate application-docker.properties instead of application.properties
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - order-service-db
      - discovery-server
      - api-gateway


  inventory-service:
    container_name: inventory-service
    image: mnykolaichuk/inventory-service:latest
#    This env activate application-docker.properties instead of application.properties
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - inventory-service-db
      - discovery-server
      - api-gateway

volumes:
  mysql-order:
  mysql-inventory:
  mysql-keycloak:

# docker compose up -d
# -d -- demon mode

